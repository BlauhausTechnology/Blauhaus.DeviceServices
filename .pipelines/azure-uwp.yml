trigger:
- release/*

pool:
  vmImage: 'windows-2022'

variables:
  solution: 'src\Blauhaus.DeviceServices.sln'
  buildPlatform: 'Any CPU'
  DotNetVersion: 7.0.100
  VersionName: $[replace(variables['Build.SourceBranchName'], 'refs/heads/release/', '')]
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- powershell: Write-Host "Branch Name $(Build.SourceBranchName)"

- task: UseDotNet@2
  displayName: .NET Version
  inputs:
    packageType: 'sdk'
    version: '$(DotNetVersion)'

- task: CmdLine@2
  displayName: Install MAUI
  inputs:
    script: 'dotnet workload install maui'

- task: Bash@3
  displayName: Restore nuget
  inputs:
    targetType: 'inline'
    script: |
        dotnet restore '$(solution)' 

- task: MSBuild@1
  inputs:
    solution: './src/Blauhaus.DeviceServices/Blauhaus.DeviceServices.csproj'
    configuration: 'Release'
    msbuildArgs: '/p:TargetFramework=Xamarin.iOS10 /t:restore;build;pack /p:PackageVersion=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'
    
- task: MSBuild@1
  inputs:
    solution: './src/Blauhaus.DeviceServices/Blauhaus.DeviceServices.csproj'
    configuration: 'Release'
    msbuildArgs: '/p:TargetFramework=MonoAndroid10.0 /t:restore;build;pack /p:PackageVersion=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'
    
- task: MSBuild@1
  inputs:
    solution: './src/Blauhaus.DeviceServices/Blauhaus.DeviceServices.csproj'
    configuration: 'Release'
    msbuildArgs: '/p:TargetFramework=uap10.0.19041 /t:restore;build;pack /p:PackageVersion=$(VersionName) /p:PackageOutputPath=$(appxPackageDir)'

- task: Bash@3
  displayName: Build
  inputs:
    targetType: 'inline'
    script: | 
        dotnet publish ./src/Blauhaus.DeviceServices.Abstractions/Blauhaus.DeviceServices.Abstractions.csproj -f netstandard2.0 -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices/Blauhaus.DeviceServices.csproj -f netstandard2.0 -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.Maui/Blauhaus.DeviceServices.Maui.csproj -f net7.0 -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.Maui/Blauhaus.DeviceServices.Maui.csproj -f net7.0-ios -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.Maui/Blauhaus.DeviceServices.Maui.csproj -f net7.0-android -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.Maui/Blauhaus.DeviceServices.Maui.csproj -f net7.0-windows10.0.19041 -c Release -p:PublishReadyToRun=false -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.Blazor/Blauhaus.DeviceServices.Blazor.csproj -f net7.0 -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)
        dotnet publish ./src/Blauhaus.DeviceServices.TestHelpers/Blauhaus.DeviceServices.TestHelpers.csproj -f net7.0 -c Release -o $(build.sourcesdirectory) -p:Version=$(VersionName)

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Blauhaus Nuget'

