name: Blauhaus Packages
on:
  push:
    branches:
    - release/*

env:
    SolutionPath: ./src/Blauhaus.DeviceServices.sln
  
jobs:
  
  build_macos:
     runs-on: macos-latest
     env: 
       Configuration: 'Release'
     steps:
     - uses: actions/checkout@v2
     - name: Set Version
       run: |
        npm install @actions/core --save
        node ./scripts/getversion.js           
     - uses: actions/setup-dotnet@v1
       with:
         dotnet-version: '7.x'
         include-prerelease: true
     - name: Install MAUI Workloads
       run: |
         dotnet workload install maui --ignore-failed-sources  
     - name: Build NuGet Package
       run: |
         dotnet build $SolutionPath --configuration $Configuration -p:Version=$VERSION_NAME
        
     - name: Deploy NuGet Package
       run: |
         dotnet nuget push **/*.nupkg" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

  build_windows:
     runs-on: windows-latest
     env:  
       Configuration: 'Release_Xamarin'
       OutputPath: ./output

     steps:

     - uses: actions/checkout@v2
     - name: Set Version
       run: |
        npm install @actions/core --save
        node ./scripts/getversion.js
     - uses: microsoft/setup-msbuild@v1.0.2

     - uses: actions/setup-dotnet@v1
       with:
         dotnet-version: '7.x'
         include-prerelease: true

     - name: MS Build
       run: | 
         echo ${env:OutputPath}
         msbuild /m /p:Configuration=${env:Configuration} /t:pack /restore /p:Version=${env:VERSION_NAME} /p:PackageOutputPath=${env:OutputPath} ${env:SolutionPath}

     - name: Deploy NuGet Package
       run: |
         dotnet nuget push ${env:OutputPath}/Blauhaus.DeviceServices.Xamarin.${env:VERSION_NAME}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

   